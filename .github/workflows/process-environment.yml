name: Process Termux Environment Data

# Trigger workflow on push to main branch when data changes
on:
  push:
    branches: [ main ]
    paths:
      - 'main/data/**'
      - 'main/scripts/**'
      - '.github/workflows/**'
  
  # Manual trigger option
  workflow_dispatch:
    inputs:
      force_processing:
        description: 'Force complete environment processing'
        required: false
        default: false
        type: boolean

# Environment variables
env:
  DATA_PATH: main/data
  REPORTS_PATH: main/data/reports
  
jobs:
  process-environment-data:
    name: Process Environment Data
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Get last 2 commits for comparison
        
    - name: 📊 Validate Data Structure  
      id: validate
      run: |
        echo "🔍 Validating data structure..."
        
        # Check if data directory exists
        if [ ! -d "$DATA_PATH" ]; then
          echo "❌ Data directory not found: $DATA_PATH"
          exit 1
        fi
        
        # Check required subdirectories
        required_dirs=("packages" "system" "config" "snapshots" "reports")
        for dir in "${required_dirs[@]}"; do
          if [ ! -d "$DATA_PATH/$dir" ]; then
            echo "❌ Required directory missing: $DATA_PATH/$dir"
            exit 1
          fi
        done
        
        # Check for latest snapshot
        if [ ! -f "$DATA_PATH/snapshots/latest-snapshot.json" ]; then
          echo "❌ Latest snapshot not found"
          exit 1
        fi
        
        echo "✅ Data structure validation passed"
        echo "data_valid=true" >> $GITHUB_OUTPUT
        
    - name: 📈 Analyze Environment Changes
      id: analyze
      if: steps.validate.outputs.data_valid == 'true'
      run: |
        echo "🔍 Analyzing environment changes..."
        
        # Get latest snapshot data
        latest_snapshot="$DATA_PATH/snapshots/latest-snapshot.json"
        
        if [ -f "$latest_snapshot" ]; then
          # Extract key metrics
          total_packages=$(jq -r '.summary.total_packages // 0' "$latest_snapshot")
          storage_used=$(jq -r '.summary.storage_used // "unknown"' "$latest_snapshot")
          git_changes=$(jq -r '.summary.git_changes // 0' "$latest_snapshot")
          collection_time=$(jq -r '.metadata.timestamp // "unknown"' "$latest_snapshot")
          
          echo "📦 Total Packages: $total_packages"
          echo "💾 Storage Used: $storage_used"  
          echo "🔄 Git Changes: $git_changes"
          echo "⏰ Collection Time: $collection_time"
          
          # Set outputs for next steps
          echo "total_packages=$total_packages" >> $GITHUB_OUTPUT
          echo "storage_used=$storage_used" >> $GITHUB_OUTPUT
          echo "git_changes=$git_changes" >> $GITHUB_OUTPUT
          echo "collection_time=$collection_time" >> $GITHUB_OUTPUT
          
          # Check if this is a significant change
          if [ "$git_changes" -gt 0 ] || [ "$total_packages" -gt 100 ]; then
            echo "significant_change=true" >> $GITHUB_OUTPUT
            echo "🚨 Significant environment change detected!"
          else
            echo "significant_change=false" >> $GITHUB_OUTPUT
            echo "✅ Normal environment update"
          fi
        else
          echo "❌ No snapshot data found"
          exit 1
        fi
        
    - name: 📋 Generate Processing Report
      id: report
      if: steps.analyze.outputs.total_packages
      run: |
        echo "📝 Generating processing report..."
        
        # Create workflow report
        report_file="workflow-report-$(date +%Y-%m-%d_%H-%M-%S).md"
        report_path="$REPORTS_PATH/$report_file"
        
        # Ensure reports directory exists
        mkdir -p "$REPORTS_PATH"
        
        cat > "$report_path" << EOF
        # GitHub Actions Processing Report
        
        **Generated**: $(date)  
        **Workflow Run**: [\#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})  
        **Trigger**: ${{ github.event_name }}
        
        ## Environment Summary
        - **Total Packages**: ${{ steps.analyze.outputs.total_packages }}
        - **Storage Used**: ${{ steps.analyze.outputs.storage_used }}
        - **Uncommitted Changes**: ${{ steps.analyze.outputs.git_changes }}
        - **Data Collection Time**: ${{ steps.analyze.outputs.collection_time }}
        - **Significant Change**: ${{ steps.analyze.outputs.significant_change }}
        
        ## Processing Results
        - ✅ Data structure validation passed
        - ✅ Environment analysis completed
        - ✅ Automated processing successful
        
        ## Files Processed
        $(find $DATA_PATH -name "*.json" -o -name "*.txt" -o -name "*.md" | head -10 | sed 's/^/- /')
        
        ## Next Steps
        - Review environment changes
        - Check for package updates needed
        - Verify configuration integrity
        
        ---
        *Generated by Termux Environment GitHub Actions Workflow*
        EOF
        
        echo "✅ Processing report generated: $report_path"
        echo "report_file=$report_file" >> $GITHUB_OUTPUT
        echo "report_path=$report_path" >> $GITHUB_OUTPUT
        
    - name: 🔔 Create Summary Comment
      if: steps.report.outputs.report_file
      run: |
        echo "## 🤖 Automated Environment Processing Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**📊 Environment Statistics:**" >> $GITHUB_STEP_SUMMARY
        echo "- 📦 Packages: ${{ steps.analyze.outputs.total_packages }}" >> $GITHUB_STEP_SUMMARY
        echo "- 💾 Storage: ${{ steps.analyze.outputs.storage_used }}" >> $GITHUB_STEP_SUMMARY
        echo "- 🔄 Changes: ${{ steps.analyze.outputs.git_changes }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**📝 Report Generated:** \`${{ steps.report.outputs.report_file }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ steps.analyze.outputs.significant_change }}" == "true" ]; then
          echo "🚨 **Significant environment change detected!**" >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ **Normal environment update processed**" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: 💾 Commit Generated Reports
      if: steps.report.outputs.report_file
      run: |
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "Termux Environment Bot"
        
        # Add generated reports
        git add "$REPORTS_PATH"
        
        # Check if there are changes to commit
        if git diff --cached --quiet; then
          echo "No new reports to commit"
        else
          git commit -m "🤖 Auto-generate environment processing report
          
          - Processed environment data from ${{ steps.analyze.outputs.collection_time }}
          - Total packages: ${{ steps.analyze.outputs.total_packages }}
          - Storage usage: ${{ steps.analyze.outputs.storage_used }}
          - Workflow run: #${{ github.run_number }}"
          
          git push
          echo "✅ Reports committed and pushed"
        fi